{"version":3,"sources":["components/FirstTask.jsx","App.js","index.js"],"names":["DATA_URL","FirestTask","React","useState","columnDefs","setColumnDefs","rowData","setRowData","gridApi","setGridApi","openAddUser","setOpenAddUser","userData","setUserData","sortable","flex","defaultColDef","handelInputChange","e","persist","target","name","value","useEffect","Axios","get","then","res","data","catch","err","console","log","field","unSortIcon","style","width","height","display","flexDirection","marginBottom","Card","CardActions","disableSpacing","Button","onClick","applyTransaction","remove","getSelectedRows","forEachNode","node","push","post","onRemoveSelected","Collapse","in","timeout","unmountOnExit","CardContent","justifyContent","TextField","autoFocus","label","onChange","show","type","InputProps","inputProps","min","max","tickets","newData","date","moment","format","add","addItems","flexGrow","id","className","rowSelection","animateRows","onGridReady","params","api","App","ReactDOM","render","Fragment","document","getElementById"],"mappings":"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","file":"static/js/main.547bb325.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\r\n\r\nconst DATA_URL='https://servergrid.herokuapp.com/'\r\n\r\nexport default function FirestTask(){\r\n  const [columnDefs,setColumnDefs] = React.useState();\r\n  const [rowData,setRowData] = React.useState();\r\n  const [gridApi,setGridApi] = React.useState();\r\n  const [openAddUser,setOpenAddUser] = React.useState(false);\r\n  const [userData,setUserData] = React.useState({});\r\n  \r\n  const [defaultColDef] = React.useState({\r\n    sortable: true,\r\n    flex:1\r\n  })\r\n\r\n  const handelInputChange = e =>{\r\n    e.persist();\r\n    setUserData(userData=>({...userData,[e.target.name]:e.target.value}))\r\n  }\r\n\r\n  useEffect(()=>{\r\n    Axios.get(DATA_URL)\r\n      .then((res)=>{\r\n        setRowData(res.data)\r\n      })\r\n      .catch((err)=>{\r\n        console.log(err)\r\n    })\r\n\r\n    const columnCountData=[\r\n      { field: 'name' ,sortable: true},\r\n      { field: 'date' ,sortable: true},\r\n      { field: 'show' ,sortable: true},\r\n      { field: 'tickets' ,unSortIcon: true},\r\n    ];\r\n    setColumnDefs(columnCountData);\r\n  },[])\r\n\r\n  \r\n\r\n  const handleExpandClick = () => {\r\n    setOpenAddUser(!openAddUser);\r\n  };\r\n\r\n  const onGridReady = (params) => {\r\n    setGridApi(params.api);\r\n  };\r\n\r\n  \r\n\r\n  const addItems = () => {\r\n\r\n    let newData = {\r\n      name: userData.name||\"no data\",\r\n      date: moment().format('DD/MM/YYYY'),\r\n      show: userData.show||\"no data\",\r\n      tickets: userData.tickets||\"no data\",\r\n    };\r\n\r\n    Axios.post(DATA_URL+\"postUserData\",newData)\r\n      .then((res)=>{\r\n        console.log(res.data)\r\n      })\r\n      .catch((err)=>{\r\n        console.log(err)\r\n      })\r\n\r\n    gridApi.applyTransaction({add:[newData]});\r\n  };\r\n\r\n  const onRemoveSelected = () => {\r\n    const rowData=[];\r\n    gridApi.applyTransaction({ remove: gridApi.getSelectedRows() });\r\n    \r\n    gridApi.forEachNode(function(node) {\r\n      rowData.push(node.data);\r\n    });\r\n\r\n    Axios.post(DATA_URL+\"removeUserData\",rowData)\r\n      .then((res)=>{\r\n      })\r\n      .catch((err)=>{\r\n        console.log(err)\r\n      })\r\n  };\r\n\r\n\r\n  return(\r\n    <div style={{ width: 700, height: '100%' }}>\r\n        <div\r\n          style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\r\n        >\r\n          <div style={{ marginBottom: '4px' }}>\r\n            <Card >\r\n              <CardActions disableSpacing>\r\n                <Button onClick={handleExpandClick}>Add Items</Button>\r\n                <Button onClick={() => onRemoveSelected()}>Remove Selected</Button>\r\n              </CardActions>\r\n              <Collapse in={openAddUser} timeout=\"auto\" unmountOnExit>\r\n                <CardContent style={{display:'flex',justifyContent:'space-between'}}>\r\n                  <TextField \r\n                    autoFocus={true} \r\n                    name=\"name\"\r\n                    label=\"Name\" \r\n                    onChange={handelInputChange}\r\n                    value={userData.name||''}\r\n                  />\r\n                  <TextField \r\n                    name=\"show\"\r\n                    label=\"Show Name\" \r\n                    onChange={handelInputChange}\r\n                    value={userData.show||''}\r\n                  />\r\n                  <TextField \r\n                    name=\"tickets\"\r\n                    label=\"Tickets\" \r\n                    type=\"number\"\r\n                    InputProps={{\r\n                      inputProps: { \r\n                        min: 1,\r\n                        max: 10\r\n                      }\r\n                    }}\r\n                    value={userData.tickets||''}\r\n                    onChange={handelInputChange}\r\n                  />\r\n                  <Button onClick={() => addItems()}>Add</Button>\r\n                </CardContent>\r\n              </Collapse>\r\n            </Card>\r\n          </div>\r\n          <div style={{ flexGrow: '1' }}>\r\n            <div\r\n              id=\"myGrid\"\r\n              style={{\r\n                height: 400,\r\n                width: \"100%\",\r\n              }}\r\n              className=\"ag-theme-alpine\"\r\n            >\r\n              <AgGridReact\r\n                rowData={rowData}\r\n                columnDefs={columnDefs}\r\n                defaultColDef={defaultColDef}\r\n                rowSelection='multiple'\r\n                animateRows={true}\r\n                onGridReady={onGridReady}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\n\r\n","import React from 'react';\nimport './App.css';\nimport FirstTask from './components/FirstTask';\n\nfunction App() {\n  return (\n    <div >\n      <FirstTask/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}